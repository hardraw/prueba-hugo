import _flow from "lodash/flow";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { API as GitlabAPI } from 'netlify-cms-backend-gitlab';
import { unsentRequest, then } from 'netlify-cms-lib-util';
export default class API extends GitlabAPI {
  constructor(config) {
    super(config);

    _defineProperty(this, "authenticateRequest", async req => unsentRequest.withHeaders({
      Authorization: `Bearer ${await this.tokenPromise()}`
    }, req));

    _defineProperty(this, "request", async req => _flow([this.buildRequest, this.authenticateRequest, then(unsentRequest.performRequest)])(req));

    _defineProperty(this, "hasWriteAccess", () => Promise.resolve(true));

    this.tokenPromise = config.tokenPromise;
    this.commitAuthor = config.commitAuthor;
    this.repoURL = '';
  }

}