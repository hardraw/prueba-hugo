function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import PropTypes from 'prop-types';
export default class StringControl extends React.Component {
  render() {
    const _this$props = this.props,
          forID = _this$props.forID,
          value = _this$props.value,
          _onChange = _this$props.onChange,
          classNameWrapper = _this$props.classNameWrapper,
          setActiveStyle = _this$props.setActiveStyle,
          setInactiveStyle = _this$props.setInactiveStyle;
    return React.createElement("input", {
      type: "text",
      id: forID,
      className: classNameWrapper,
      value: value || '',
      onChange: e => _onChange(e.target.value),
      onFocus: setActiveStyle,
      onBlur: setInactiveStyle
    });
  }

}

_defineProperty(StringControl, "propTypes", {
  onChange: PropTypes.func.isRequired,
  forID: PropTypes.string,
  value: PropTypes.node,
  classNameWrapper: PropTypes.string.isRequired,
  setActiveStyle: PropTypes.func.isRequired,
  setInactiveStyle: PropTypes.func.isRequired
});

_defineProperty(StringControl, "defaultProps", {
  value: ''
});