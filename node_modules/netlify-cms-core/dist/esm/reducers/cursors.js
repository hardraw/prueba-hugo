import { fromJS } from 'immutable';
import { Cursor } from 'netlify-cms-lib-util';
import { ENTRIES_SUCCESS } from "../actions/entries"; // Since pagination can be used for a variety of views (collections
// and searches are the most common examples), we namespace cursors by
// their type before storing them in the state.

export const selectCollectionEntriesCursor = (state, collectionName) => new Cursor(state.getIn(['cursorsByType', 'collectionEntries', collectionName]));

const cursors = function cursors() {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : fromJS({
    cursorsByType: {
      collectionEntries: {}
    }
  });
  let action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case ENTRIES_SUCCESS:
      {
        return state.setIn(['cursorsByType', 'collectionEntries', action.payload.collection], Cursor.create(action.payload.cursor).store);
      }

    default:
      return state;
  }
};

export default cursors;