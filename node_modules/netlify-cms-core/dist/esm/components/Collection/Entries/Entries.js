import PropTypes from 'prop-types';
import React from 'react';
import ImmutablePropTypes from 'react-immutable-proptypes';
import { translate } from 'react-polyglot';
import { Loader } from 'netlify-cms-ui-default';
import EntryListing from "./EntryListing";

const Entries = (_ref) => {
  let collections = _ref.collections,
      entries = _ref.entries,
      publicFolder = _ref.publicFolder,
      isFetching = _ref.isFetching,
      viewStyle = _ref.viewStyle,
      cursor = _ref.cursor,
      handleCursorActions = _ref.handleCursorActions,
      t = _ref.t;
  const loadingMessages = [t('collection.entries.loadingEntries'), t('collection.entries.cachingEntries'), t('collection.entries.longerLoading')];

  if (entries) {
    return React.createElement(EntryListing, {
      collections: collections,
      entries: entries,
      publicFolder: publicFolder,
      viewStyle: viewStyle,
      cursor: cursor,
      handleCursorActions: handleCursorActions
    });
  }

  if (isFetching) {
    return React.createElement(Loader, {
      active: true
    }, loadingMessages);
  }

  return React.createElement("div", {
    className: "nc-collectionPage-noEntries"
  }, "No Entries");
};

Entries.propTypes = {
  collections: ImmutablePropTypes.map.isRequired,
  entries: ImmutablePropTypes.list,
  publicFolder: PropTypes.string.isRequired,
  page: PropTypes.number,
  isFetching: PropTypes.bool,
  viewStyle: PropTypes.string,
  cursor: PropTypes.any.isRequired,
  handleCursorActions: PropTypes.func.isRequired,
  t: PropTypes.func.isRequired
};
export default translate()(Entries);