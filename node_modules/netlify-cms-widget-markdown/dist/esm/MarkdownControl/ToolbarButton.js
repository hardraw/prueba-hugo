import _styled from "@emotion/styled-base";
import React from 'react';
import PropTypes from 'prop-types';
import { Icon, buttons } from 'netlify-cms-ui-default';

const StyledToolbarButton = _styled("button", {
  target: "ejt81md0",
  label: "StyledToolbarButton"
})(buttons.button, ";display:inline-block;padding:6px;border:none;background-color:transparent;font-size:16px;color:", props => props.isActive ? '#1e2532' : 'inherit', ";cursor:pointer;&:disabled{cursor:auto;opacity:0.5;}", Icon, "{display:block;}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9NYXJrZG93bkNvbnRyb2wvVG9vbGJhckJ1dHRvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLeUMiLCJmaWxlIjoiLi4vLi4vLi4vc3JjL01hcmtkb3duQ29udHJvbC9Ub29sYmFyQnV0dG9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBJY29uLCBidXR0b25zIH0gZnJvbSAnbmV0bGlmeS1jbXMtdWktZGVmYXVsdCc7XG5cbmNvbnN0IFN0eWxlZFRvb2xiYXJCdXR0b24gPSBzdHlsZWQuYnV0dG9uYFxuICAke2J1dHRvbnMuYnV0dG9ufTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwYWRkaW5nOiA2cHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6ICR7cHJvcHMgPT4gKHByb3BzLmlzQWN0aXZlID8gJyMxZTI1MzInIDogJ2luaGVyaXQnKX07XG4gIGN1cnNvcjogcG9pbnRlcjtcblxuICAmOmRpc2FibGVkIHtcbiAgICBjdXJzb3I6IGF1dG87XG4gICAgb3BhY2l0eTogMC41O1xuICB9XG5cbiAgJHtJY29ufSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbmA7XG5cbmNvbnN0IFRvb2xiYXJCdXR0b24gPSAoeyB0eXBlLCBsYWJlbCwgaWNvbiwgb25DbGljaywgaXNBY3RpdmUsIGlzSGlkZGVuLCBkaXNhYmxlZCB9KSA9PiB7XG4gIGlmIChpc0hpZGRlbikge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8U3R5bGVkVG9vbGJhckJ1dHRvblxuICAgICAgaXNBY3RpdmU9e2lzQWN0aXZlICYmIHR5cGUgJiYgaXNBY3RpdmUodHlwZSl9XG4gICAgICBvbkNsaWNrPXtlID0+IG9uQ2xpY2sgJiYgb25DbGljayhlLCB0eXBlKX1cbiAgICAgIHRpdGxlPXtsYWJlbH1cbiAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICA+XG4gICAgICB7aWNvbiA/IDxJY29uIHR5cGU9e2ljb259IC8+IDogbGFiZWx9XG4gICAgPC9TdHlsZWRUb29sYmFyQnV0dG9uPlxuICApO1xufTtcblxuVG9vbGJhckJ1dHRvbi5wcm9wVHlwZXMgPSB7XG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGljb246IFByb3BUeXBlcy5zdHJpbmcsXG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICBpc0FjdGl2ZTogUHJvcFR5cGVzLmZ1bmMsXG4gIGlzSGlkZGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgVG9vbGJhckJ1dHRvbjtcbiJdfQ== */"));

const ToolbarButton = (_ref) => {
  let type = _ref.type,
      label = _ref.label,
      icon = _ref.icon,
      _onClick = _ref.onClick,
      isActive = _ref.isActive,
      isHidden = _ref.isHidden,
      disabled = _ref.disabled;

  if (isHidden) {
    return null;
  }

  return React.createElement(StyledToolbarButton, {
    isActive: isActive && type && isActive(type),
    onClick: e => _onClick && _onClick(e, type),
    title: label,
    disabled: disabled
  }, icon ? React.createElement(Icon, {
    type: icon
  }) : label);
};

ToolbarButton.propTypes = {
  type: PropTypes.string,
  label: PropTypes.string.isRequired,
  icon: PropTypes.string,
  onClick: PropTypes.func,
  isActive: PropTypes.func,
  isHidden: PropTypes.bool,
  disabled: PropTypes.bool
};
export default ToolbarButton;